# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    # - go generate ./...
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
archives:
  - replacements:
      darwin: Darwin
      linux: Linux
      windows: Windows
      386: i386
      amd64: x86_64
    format_overrides:
      - goos: windows
        format: zip
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

# modelines, feel free to remove those if you don't want/use them:
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

brews:
  -
    # Name template of the recipe
    # Default to project name
    name: aurl

    # GitHub/GitLab repository to push the formula to
    tap:
      owner: classmethod
      name: homebrew-repos

    # Template for the url which is determined by the given Token (github,
    # gitlab or gitea)
    #
    # Default depends on the client.
    # url_template: "http://github.mycompany.com/foo/bar/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # Git author used to commit to the repository.
    # Defaults are shown.
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com

    # The project name and current git tag are used in the format string.
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"

    # So you can `brew test` your formula.
    # Default is empty.
    test: |
      system "#{bin}/aurl --version"
      # ...

    # Custom install script for brew.
    # Default is 'bin.install "the binary name"'.
    install: |
      bin.install "aurl"
      # bash_completion.install "completions/aurl.bash" => "aurl"
      # ...
